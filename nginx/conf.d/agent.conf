# agent.conf — Amara proxy (split config)
server_tokens off;

upstream litellm    { server litellm:4000; }
upstream mcp_github { server mcp-github:8088; }
upstream qdrant     { server qdrant:6333; }

server {
  listen 80;

  # HEALTH PAGE (keep header BEFORE return)
  location = / {
    add_header Content-Type text/plain;
    return 200 "OK - Amara proxy online\n";
  }

  # Optional: serve a tiny static UI (index.html) if present
  root /usr/share/nginx/html;
  index index.html;

  # LiteLLM (OpenAI-compatible) — stream/SSE safe
  location /api/llm/ {
    gzip off;
    proxy_http_version 1.1;
    proxy_buffering off;
    add_header X-Accel-Buffering no always;
    proxy_read_timeout 1h;
    proxy_send_timeout 1h;

    proxy_set_header Host              $host;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Authorization $http_authorization;


    proxy_pass http://litellm/;
  }

  # GitHub MCP adapter
  location /api/github/ {
    proxy_read_timeout 300s;
    proxy_set_header Host              $host;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://mcp_github/;
  }

  # Qdrant REST
  location /qdrant/ {
    proxy_read_timeout 300s;
    proxy_set_header Host              $host;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass http://qdrant/;
  }
}
