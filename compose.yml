# compose.yml
#
# Usage:
#   docker compose up -d
#   docker compose --profile proxy up -d        # include nginx proxy
#
# Notes:
# - Uses ${VAR:-default} so defaults apply even if env var is set but empty.
# - Qdrant healthcheck omitted (we validate via /readyz from host).
# - LiteLLM built locally for amd64; internal-only; reach via NGINX /api/llm/.

services:
  qdrant:
    image: qdrant/qdrant:v1.12.4
    container_name: amara-qdrant
    restart: unless-stopped
    ports:
      - "${QDRANT_PORT:-6333}:6333"
    environment:
      QDRANT__SERVICE__GRPC_PORT: 6334
    volumes:
      - ${AMARA_STORAGE:-/mnt/storage}/qdrant:/qdrant/storage
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -fsS http://127.0.0.1:${QDRANT_PORT:-6333}/readyz >/dev/null || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 10s

  # ollama:
  #   image: ollama/ollama:latest
  #   container_name: amara-ollama
  #   restart: unless-stopped
  #   ports:
  #     - "${OLLAMA_PORT:-11434}:11434"
  #   environment:
  #     - OLLAMA_KEEP_ALIVE=${OLLAMA_KEEP_ALIVE-8h}
  #   volumes:
  #     - ${AMARA_STORAGE:-/mnt/storage}/ollama:/root/.ollama
  #   healthcheck:
  #     test:
  #       [
  #         "CMD-SHELL",
  #         "OLLAMA_HOST=127.0.0.1:${OLLAMA_PORT:-11434} ollama ps >/dev/null 2>&1 || exit 1",
  #       ]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 30
  #     start_period: 45s
  #   profiles: ["gpu"]
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - capabilities: ["gpu"]

  litellm:
    build:
      context: ./ops/litellm
      dockerfile: Dockerfile
    container_name: amara-litellm
    restart: unless-stopped
    volumes:
      - ./ops/litellm/config.yaml:/etc/litellm/config.yaml:ro
    environment:
      - PORT=${LITELLM_PORT-4000}
      - LITELLM_CONFIG=/etc/litellm/config.yaml
      - LITELLM_MASTER_KEY=${LITELLM_PROXY_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    command: >
      litellm --port ${LITELLM_PORT-4000} --host 0.0.0.0
      --config /etc/litellm/config.yaml
    expose:
      - "${LITELLM_PORT-4000}"
    healthcheck:
      # Send Authorization header because MASTER_KEY is enabled
      test:
        [
          "CMD-SHELL",
          'curl -fsS -H "Authorization: Bearer ${LITELLM_PROXY_KEY}" http://127.0.0.1:${LITELLM_PORT-4000}/health >/dev/null || exit 1',
        ]
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 10s

  # GitHub MCP adapter (FastAPI)
  mcp-github:
    build:
      context: ./ops/mcp/github
    container_name: amara-mcp-github
    restart: unless-stopped
    environment:
      - GITHUB_OWNER=${GITHUB_OWNER}
      - GITHUB_REPO=${GITHUB_REPO}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
    ports:
      - "${MCP_GITHUB_PORT:-8088}:8088"
    depends_on:
      qdrant:
        condition: service_started

  # Optional: n8n for orchestrating specialist agents (webhooks)
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: amara-n8n
    restart: unless-stopped
    environment:
      - GENERIC_TIMEZONE=${TZ:-America/Los_Angeles}
      - N8N_HOST=localhost
      - N8N_PROTOCOL=http
      - N8N_PORT=5678
      - N8N_DIAGNOSTICS_ENABLED=false
    ports:
      - "${N8N_PORT:-5678}:5678"
    volumes:
      - ${AMARA_STORAGE:-/mnt/storage}/n8n:/home/node/.n8n
    depends_on:
      litellm:
        condition: service_started
      qdrant:
        condition: service_started

  # Reverse proxy (profile: proxy)
  nginx:
    image: nginx:1.27-alpine
    container_name: amara-nginx
    profiles: ["proxy"]
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT:-8080}:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/html:/usr/share/nginx/html:ro
    depends_on:
      litellm:
        condition: service_started
      n8n:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1/ || exit 1"] # ‚Üê no port; hits :80 inside
      interval: 15s
      timeout: 5s
      retries: 10
